using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace OOP_KURS
{
    /// <summary>
    /// Логика взаимодействия для MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public ObservableCollection<Customer> Test = ReferenceHelper.GetElementsByRefName("Customer");

        public MainWindow()
        {

            

            InitializeComponent();

            // DG.DataContext = Test;
            //ListBox.Items.Add("test");


            //PopupSuggest.PlacementTarget = Doc;


            //List<Customer> data = new List<Customer> {
            //new Customer{Name = "A"},
            //new Customer{Name = "B"},
            //new Customer{Name = "C"},
            //new Customer{Name = "D"}};

            //

            ////MyObservableCollection.Add(new Customer { });

            //  Test.Add(new Customer { Name = "A" });

            ReferenceHelper.Add(new Customer { Name = "1" });

            DG.ItemsSource = Test;



            //ReferenceHelper.InvokeMethod("Customer", "ClearList");

            // Test.RemoveAt(0);


            //var MyObservableCollection = ReferenceHelper.GetElementsByRefName("Customer");

            // DG.DataContext = MyObservableCollection;

            // DG.ItemsSource = ReferenceHelper.GetElementsByRefName("Customer");

            //ReferenceHelper.Add(new Customer { Name = "A" });

            //FieldCatalog.SetColumnsForDataGrid(DG, "Document");


        }

        private void Open_Reference_Form(object sender, RoutedEventArgs e)
        {
            if ((sender as MenuItem).Name.Length != 0)
            {
                DynamicTabForm View = new DynamicTabForm((sender as MenuItem).Name.Substring(4));
                View.Show();
            }
        }
        private void MenuItem_Click_1(object sender, RoutedEventArgs e)
        {
            DocumentForm View = new DocumentForm();
            View.Show();
        }

        private void DG_AutoGeneratingColumn(object sender, DataGridAutoGeneratingColumnEventArgs e)
        {
           //FieldCatalog.SetColumnsForDataGrid(GridTemp, "Document");

            //if (GridTemp.Columns[i] != null);
            //    e.Column = GridTemp.Columns[i];

           // i++;

            //e.Column = new DataGridTextColumn
            //{

            //};
        }

        private void DG_AutoGeneratedColumns(object sender, EventArgs e)
        {
            //DataGrid GridTemp = new DataGrid();

            //FieldCatalog.SetColumnsForDataGrid(GridTemp, "Document");

            //var test = sender as FilterDataGrid.FilterDataGrid;

            //int i = 0;

            //foreach (var col in GridTemp.Columns)
            //{
            //    try
            //    {
            //        test.Columns.Add(col);
            //    }
            //    catch { }
            //}
        }
    }
}
